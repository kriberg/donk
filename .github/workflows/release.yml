on:
  workflow_dispatch:
    inputs:
      bump_major_version:
        required: false
        description: Bump major version
        type: boolean
      bump_minor_version:
        required: false
        description: Bump minor version
        type: boolean
      publish:
        required: false
        default: false
        description: Bump minor version
        type: boolean

concurrency:
  group: "release"
  cancel-in-progress: false
jobs:
  release:
    runs-on: [ubuntu-latest]
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # ratchet:actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # ratchet:actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"
      - name: Install uv
        uses: astral-sh/setup-uv@6b9c6063abd6010835644d4c2e1bef4cf5cd0fca # ratchet:astral-sh/setup-uv@v6

      - name: Sync packages
        run: |
          uv sync

      - name: Bump major version
        if: ${{ inputs.bump_major_version }}
        run: |
          python -m donk major
      - name: Bump minor version
        if: ${{ inputs.bump_minor_version }}
        run: |
          python -m donk minor

      - name: Bump patch version
        if: ${{ !(inputs.bump_major_version || inputs.bump_minor_version) }}
        run: |
          python -m donk patch

      - name: Build package
        run: |
          uv build

      - name: Tag
        if: ${{ inputs.publish }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -u
          git commit -m "chore: bump version"
          git push
          git tag -f "$(python -m donk show)"
          git push --tags

      - name: Publish to PyPI
        if: ${{ inputs.publish }}
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          python -m twine upload dist/*
